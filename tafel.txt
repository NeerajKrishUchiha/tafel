import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Define the Tafel fit function
def tafel_fit(x, a, b):
    return a * x + b

# Function to calculate icorr and ecorr
def calculate_icorr_ecorr(x, y):
    # Fit the linear portion of the Tafel plot
    popt, _ = curve_fit(tafel_fit, x, y)
    
    # Calculate corrosion current density (icorr) and corrosion potential (Ecorr)
    a, b = popt
    icorr = 10**b  # Convert log(i) to i
    ecorr = -b / a
    
    return icorr, ecorr, popt

# Load the data from the Excel file
file_path = 'your_file_path_here.xlsx'
data = pd.read_excel(file_path, sheet_name='Sheet1')

# Clean up the dataframe by renaming columns and removing unnecessary rows
data.columns = ['Bare X-Axis', 'Bare Y-Axis', 'MPC X-Axis', 'MPC Y-Axis', 'LaPH X-Axis', 'LaPH Y-Axis', 'CePH X-Axis', 'CePH Y-Axis']
data = data.drop(index=0).reset_index(drop=True)

# Convert data to numeric
for col in data.columns:
    data[col] = pd.to_numeric(data[col], errors='coerce')

# Extract data for each sample
samples = ['Bare', 'MPC', 'LaPH', 'CePH']
results = {}

# Plot the Tafel plots and calculate icorr and ecorr
plt.figure(figsize=(12, 8))

for i, sample in enumerate(samples):
    x = data[f'{sample} X-Axis'].dropna().values
    y = data[f'{sample} Y-Axis'].dropna().values
    
    icorr, ecorr, popt = calculate_icorr_ecorr(x, y)
    results[sample] = {'icorr (µA/cm^2)': icorr, 'Ecorr (V)': ecorr}
    
    # Plot the data
    plt.subplot(2, 2, i+1)
    plt.scatter(x, y, label='Data')
    plt.plot(x, tafel_fit(x, *popt), color='red', label='Tafel fit')
    plt.xlabel('Potential (V)')
    plt.ylabel('log(Current Density)')
    plt.title(f'{sample} Tafel Plot')
    plt.legend()

plt.tight_layout()
plt.show()

# Display the results
for sample, result in results.items():
    print(f"{sample} - icorr: {result['icorr (µA/cm^2)']} µA/cm^2, Ecorr: {result['Ecorr (V)']} V")
